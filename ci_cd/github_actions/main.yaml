# 목적:
# - GitHub Actions를 사용하여 코드 푸시 시 자동으로 CI/CD 워크플로우를 실행합니다.
# 목표:
# - 프로젝트의 빌드, 테스트, 배포를 자동화하여 개발 프로세스를 효율적으로 관리합니다.
# 구현해야 할 기능:
# 1. 이벤트 트리거:
#    - `push` 또는 `pull_request` 이벤트 발생 시 워크플로우 실행.
# 2. 빌드:
#    - Python 환경 설치.
#    - 의존성 설치(pip, requirements.txt).
# 3. 테스트:
#    - 단위 테스트와 통합 테스트 실행.
#    - 코드 커버리지 보고서 생성.
# 4. Docker 빌드 및 푸시:
#    - Docker 이미지를 생성하고 컨테이너 레지스트리에 푸시.
# 5. 배포:
#    - Kubernetes 클러스터에 애플리케이션 배포.
# 6. 알림:
#    - 실패 또는 성공 시 Slack/Email 등으로 알림 전송.

# GitHub Actions YAML 구성 예시:
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: your-docker-repo/image-name:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.24.0'

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ci_cd/kubernetes/deployment.yaml
          kubectl apply -f ci_cd/kubernetes/service.yaml
